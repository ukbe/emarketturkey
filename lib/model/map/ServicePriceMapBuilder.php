<?php


/**
 * This class adds structure of 'EMT_SERVICE_PRICE' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 04/20/11 11:10:08
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ServicePriceMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ServicePriceMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(ServicePricePeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(ServicePricePeer::TABLE_NAME);
		$tMap->setPhpName('ServicePrice');
		$tMap->setClassname('ServicePrice');

		$tMap->setUseIdGenerator(true);

		$tMap->setPrimaryKeyMethodInfo('EMT_SERVICE_PRICE_SEQ');

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 15);

		$tMap->addForeignKey('SERVICE_ID', 'ServiceId', 'INTEGER', 'EMT_SERVICE', 'ID', true, 10);

		$tMap->addColumn('TARGET_ID', 'TargetId', 'INTEGER', false, 10);

		$tMap->addForeignKey('TARGET_TYPE_ID', 'TargetTypeId', 'INTEGER', 'EMT_PRIVACY_NODE_TYPE', 'ID', true, 3);

		$tMap->addForeignKey('ROLE_ID', 'RoleId', 'INTEGER', 'EMT_ROLE', 'ID', false, 4);

		$tMap->addColumn('PRICE', 'Price', 'INTEGER', false, 10);

		$tMap->addColumn('CURRENCY', 'Currency', 'VARCHAR', false, 5);

		$tMap->addColumn('REFERENCE_ID', 'ReferenceId', 'INTEGER', false, 10);

		$tMap->addForeignKey('REFERENCE_TYPE_ID', 'ReferenceTypeId', 'INTEGER', 'EMT_PRIVACY_NODE_TYPE', 'ID', true, 3);

		$tMap->addColumn('TARGET_GEO_COUNTRY', 'TargetGeoCountry', 'VARCHAR', false, 5);

		$tMap->addForeignKey('TARGET_GEO_REGION_ID', 'TargetGeoRegionId', 'INTEGER', 'EXT_GEONAME', 'GEONAME_ID', false, 7);

	} // doBuild()

} // ServicePriceMapBuilder
